package com.chinadovey.parking.webapps.pojo.local;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ChargeRulesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table local_charge_rules
     *
     * @mbggenerated Fri Oct 16 14:27:17 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table local_charge_rules
     *
     * @mbggenerated Fri Oct 16 14:27:17 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table local_charge_rules
     *
     * @mbggenerated Fri Oct 16 14:27:17 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table local_charge_rules
     *
     * @mbggenerated Fri Oct 16 14:27:17 CST 2015
     */
    public ChargeRulesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table local_charge_rules
     *
     * @mbggenerated Fri Oct 16 14:27:17 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table local_charge_rules
     *
     * @mbggenerated Fri Oct 16 14:27:17 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table local_charge_rules
     *
     * @mbggenerated Fri Oct 16 14:27:17 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table local_charge_rules
     *
     * @mbggenerated Fri Oct 16 14:27:17 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table local_charge_rules
     *
     * @mbggenerated Fri Oct 16 14:27:17 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table local_charge_rules
     *
     * @mbggenerated Fri Oct 16 14:27:17 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table local_charge_rules
     *
     * @mbggenerated Fri Oct 16 14:27:17 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table local_charge_rules
     *
     * @mbggenerated Fri Oct 16 14:27:17 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table local_charge_rules
     *
     * @mbggenerated Fri Oct 16 14:27:17 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table local_charge_rules
     *
     * @mbggenerated Fri Oct 16 14:27:17 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table local_charge_rules
     *
     * @mbggenerated Fri Oct 16 14:27:17 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCTime(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Time> timeList = new ArrayList<java.sql.Time>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                timeList.add(new java.sql.Time(iter.next().getTime()));
            }
            addCriterion(condition, timeList, property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andChargeRulesNoIsNull() {
            addCriterion("charge_rules_no is null");
            return (Criteria) this;
        }

        public Criteria andChargeRulesNoIsNotNull() {
            addCriterion("charge_rules_no is not null");
            return (Criteria) this;
        }

        public Criteria andChargeRulesNoEqualTo(String value) {
            addCriterion("charge_rules_no =", value, "chargeRulesNo");
            return (Criteria) this;
        }

        public Criteria andChargeRulesNoNotEqualTo(String value) {
            addCriterion("charge_rules_no <>", value, "chargeRulesNo");
            return (Criteria) this;
        }

        public Criteria andChargeRulesNoGreaterThan(String value) {
            addCriterion("charge_rules_no >", value, "chargeRulesNo");
            return (Criteria) this;
        }

        public Criteria andChargeRulesNoGreaterThanOrEqualTo(String value) {
            addCriterion("charge_rules_no >=", value, "chargeRulesNo");
            return (Criteria) this;
        }

        public Criteria andChargeRulesNoLessThan(String value) {
            addCriterion("charge_rules_no <", value, "chargeRulesNo");
            return (Criteria) this;
        }

        public Criteria andChargeRulesNoLessThanOrEqualTo(String value) {
            addCriterion("charge_rules_no <=", value, "chargeRulesNo");
            return (Criteria) this;
        }

        public Criteria andChargeRulesNoLike(String value) {
            addCriterion("charge_rules_no like", value, "chargeRulesNo");
            return (Criteria) this;
        }

        public Criteria andChargeRulesNoNotLike(String value) {
            addCriterion("charge_rules_no not like", value, "chargeRulesNo");
            return (Criteria) this;
        }

        public Criteria andChargeRulesNoIn(List<String> values) {
            addCriterion("charge_rules_no in", values, "chargeRulesNo");
            return (Criteria) this;
        }

        public Criteria andChargeRulesNoNotIn(List<String> values) {
            addCriterion("charge_rules_no not in", values, "chargeRulesNo");
            return (Criteria) this;
        }

        public Criteria andChargeRulesNoBetween(String value1, String value2) {
            addCriterion("charge_rules_no between", value1, value2, "chargeRulesNo");
            return (Criteria) this;
        }

        public Criteria andChargeRulesNoNotBetween(String value1, String value2) {
            addCriterion("charge_rules_no not between", value1, value2, "chargeRulesNo");
            return (Criteria) this;
        }

        public Criteria andBeginMinuteIsNull() {
            addCriterion("begin_minute is null");
            return (Criteria) this;
        }

        public Criteria andBeginMinuteIsNotNull() {
            addCriterion("begin_minute is not null");
            return (Criteria) this;
        }

        public Criteria andBeginMinuteEqualTo(Integer value) {
            addCriterion("begin_minute =", value, "beginMinute");
            return (Criteria) this;
        }

        public Criteria andBeginMinuteNotEqualTo(Integer value) {
            addCriterion("begin_minute <>", value, "beginMinute");
            return (Criteria) this;
        }

        public Criteria andBeginMinuteGreaterThan(Integer value) {
            addCriterion("begin_minute >", value, "beginMinute");
            return (Criteria) this;
        }

        public Criteria andBeginMinuteGreaterThanOrEqualTo(Integer value) {
            addCriterion("begin_minute >=", value, "beginMinute");
            return (Criteria) this;
        }

        public Criteria andBeginMinuteLessThan(Integer value) {
            addCriterion("begin_minute <", value, "beginMinute");
            return (Criteria) this;
        }

        public Criteria andBeginMinuteLessThanOrEqualTo(Integer value) {
            addCriterion("begin_minute <=", value, "beginMinute");
            return (Criteria) this;
        }

        public Criteria andBeginMinuteIn(List<Integer> values) {
            addCriterion("begin_minute in", values, "beginMinute");
            return (Criteria) this;
        }

        public Criteria andBeginMinuteNotIn(List<Integer> values) {
            addCriterion("begin_minute not in", values, "beginMinute");
            return (Criteria) this;
        }

        public Criteria andBeginMinuteBetween(Integer value1, Integer value2) {
            addCriterion("begin_minute between", value1, value2, "beginMinute");
            return (Criteria) this;
        }

        public Criteria andBeginMinuteNotBetween(Integer value1, Integer value2) {
            addCriterion("begin_minute not between", value1, value2, "beginMinute");
            return (Criteria) this;
        }

        public Criteria andEndMinuteIsNull() {
            addCriterion("end_minute is null");
            return (Criteria) this;
        }

        public Criteria andEndMinuteIsNotNull() {
            addCriterion("end_minute is not null");
            return (Criteria) this;
        }

        public Criteria andEndMinuteEqualTo(Integer value) {
            addCriterion("end_minute =", value, "endMinute");
            return (Criteria) this;
        }

        public Criteria andEndMinuteNotEqualTo(Integer value) {
            addCriterion("end_minute <>", value, "endMinute");
            return (Criteria) this;
        }

        public Criteria andEndMinuteGreaterThan(Integer value) {
            addCriterion("end_minute >", value, "endMinute");
            return (Criteria) this;
        }

        public Criteria andEndMinuteGreaterThanOrEqualTo(Integer value) {
            addCriterion("end_minute >=", value, "endMinute");
            return (Criteria) this;
        }

        public Criteria andEndMinuteLessThan(Integer value) {
            addCriterion("end_minute <", value, "endMinute");
            return (Criteria) this;
        }

        public Criteria andEndMinuteLessThanOrEqualTo(Integer value) {
            addCriterion("end_minute <=", value, "endMinute");
            return (Criteria) this;
        }

        public Criteria andEndMinuteIn(List<Integer> values) {
            addCriterion("end_minute in", values, "endMinute");
            return (Criteria) this;
        }

        public Criteria andEndMinuteNotIn(List<Integer> values) {
            addCriterion("end_minute not in", values, "endMinute");
            return (Criteria) this;
        }

        public Criteria andEndMinuteBetween(Integer value1, Integer value2) {
            addCriterion("end_minute between", value1, value2, "endMinute");
            return (Criteria) this;
        }

        public Criteria andEndMinuteNotBetween(Integer value1, Integer value2) {
            addCriterion("end_minute not between", value1, value2, "endMinute");
            return (Criteria) this;
        }

        public Criteria andChargePriceIsNull() {
            addCriterion("charge_price is null");
            return (Criteria) this;
        }

        public Criteria andChargePriceIsNotNull() {
            addCriterion("charge_price is not null");
            return (Criteria) this;
        }

        public Criteria andChargePriceEqualTo(Float value) {
            addCriterion("charge_price =", value, "chargePrice");
            return (Criteria) this;
        }

        public Criteria andChargePriceNotEqualTo(Float value) {
            addCriterion("charge_price <>", value, "chargePrice");
            return (Criteria) this;
        }

        public Criteria andChargePriceGreaterThan(Float value) {
            addCriterion("charge_price >", value, "chargePrice");
            return (Criteria) this;
        }

        public Criteria andChargePriceGreaterThanOrEqualTo(Float value) {
            addCriterion("charge_price >=", value, "chargePrice");
            return (Criteria) this;
        }

        public Criteria andChargePriceLessThan(Float value) {
            addCriterion("charge_price <", value, "chargePrice");
            return (Criteria) this;
        }

        public Criteria andChargePriceLessThanOrEqualTo(Float value) {
            addCriterion("charge_price <=", value, "chargePrice");
            return (Criteria) this;
        }

        public Criteria andChargePriceIn(List<Float> values) {
            addCriterion("charge_price in", values, "chargePrice");
            return (Criteria) this;
        }

        public Criteria andChargePriceNotIn(List<Float> values) {
            addCriterion("charge_price not in", values, "chargePrice");
            return (Criteria) this;
        }

        public Criteria andChargePriceBetween(Float value1, Float value2) {
            addCriterion("charge_price between", value1, value2, "chargePrice");
            return (Criteria) this;
        }

        public Criteria andChargePriceNotBetween(Float value1, Float value2) {
            addCriterion("charge_price not between", value1, value2, "chargePrice");
            return (Criteria) this;
        }

        public Criteria andTimeSpanIsNull() {
            addCriterion("time_span is null");
            return (Criteria) this;
        }

        public Criteria andTimeSpanIsNotNull() {
            addCriterion("time_span is not null");
            return (Criteria) this;
        }

        public Criteria andTimeSpanEqualTo(Integer value) {
            addCriterion("time_span =", value, "timeSpan");
            return (Criteria) this;
        }

        public Criteria andTimeSpanNotEqualTo(Integer value) {
            addCriterion("time_span <>", value, "timeSpan");
            return (Criteria) this;
        }

        public Criteria andTimeSpanGreaterThan(Integer value) {
            addCriterion("time_span >", value, "timeSpan");
            return (Criteria) this;
        }

        public Criteria andTimeSpanGreaterThanOrEqualTo(Integer value) {
            addCriterion("time_span >=", value, "timeSpan");
            return (Criteria) this;
        }

        public Criteria andTimeSpanLessThan(Integer value) {
            addCriterion("time_span <", value, "timeSpan");
            return (Criteria) this;
        }

        public Criteria andTimeSpanLessThanOrEqualTo(Integer value) {
            addCriterion("time_span <=", value, "timeSpan");
            return (Criteria) this;
        }

        public Criteria andTimeSpanIn(List<Integer> values) {
            addCriterion("time_span in", values, "timeSpan");
            return (Criteria) this;
        }

        public Criteria andTimeSpanNotIn(List<Integer> values) {
            addCriterion("time_span not in", values, "timeSpan");
            return (Criteria) this;
        }

        public Criteria andTimeSpanBetween(Integer value1, Integer value2) {
            addCriterion("time_span between", value1, value2, "timeSpan");
            return (Criteria) this;
        }

        public Criteria andTimeSpanNotBetween(Integer value1, Integer value2) {
            addCriterion("time_span not between", value1, value2, "timeSpan");
            return (Criteria) this;
        }

        public Criteria andRulesTypeIsNull() {
            addCriterion("rules_type is null");
            return (Criteria) this;
        }

        public Criteria andRulesTypeIsNotNull() {
            addCriterion("rules_type is not null");
            return (Criteria) this;
        }

        public Criteria andRulesTypeEqualTo(Integer value) {
            addCriterion("rules_type =", value, "rulesType");
            return (Criteria) this;
        }

        public Criteria andRulesTypeNotEqualTo(Integer value) {
            addCriterion("rules_type <>", value, "rulesType");
            return (Criteria) this;
        }

        public Criteria andRulesTypeGreaterThan(Integer value) {
            addCriterion("rules_type >", value, "rulesType");
            return (Criteria) this;
        }

        public Criteria andRulesTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("rules_type >=", value, "rulesType");
            return (Criteria) this;
        }

        public Criteria andRulesTypeLessThan(Integer value) {
            addCriterion("rules_type <", value, "rulesType");
            return (Criteria) this;
        }

        public Criteria andRulesTypeLessThanOrEqualTo(Integer value) {
            addCriterion("rules_type <=", value, "rulesType");
            return (Criteria) this;
        }

        public Criteria andRulesTypeIn(List<Integer> values) {
            addCriterion("rules_type in", values, "rulesType");
            return (Criteria) this;
        }

        public Criteria andRulesTypeNotIn(List<Integer> values) {
            addCriterion("rules_type not in", values, "rulesType");
            return (Criteria) this;
        }

        public Criteria andRulesTypeBetween(Integer value1, Integer value2) {
            addCriterion("rules_type between", value1, value2, "rulesType");
            return (Criteria) this;
        }

        public Criteria andRulesTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("rules_type not between", value1, value2, "rulesType");
            return (Criteria) this;
        }

        public Criteria andBeginTimeIsNull() {
            addCriterion("begin_time is null");
            return (Criteria) this;
        }

        public Criteria andBeginTimeIsNotNull() {
            addCriterion("begin_time is not null");
            return (Criteria) this;
        }

        public Criteria andBeginTimeEqualTo(Date value) {
            addCriterionForJDBCTime("begin_time =", value, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeNotEqualTo(Date value) {
            addCriterionForJDBCTime("begin_time <>", value, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeGreaterThan(Date value) {
            addCriterionForJDBCTime("begin_time >", value, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("begin_time >=", value, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeLessThan(Date value) {
            addCriterionForJDBCTime("begin_time <", value, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("begin_time <=", value, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeIn(List<Date> values) {
            addCriterionForJDBCTime("begin_time in", values, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeNotIn(List<Date> values) {
            addCriterionForJDBCTime("begin_time not in", values, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("begin_time between", value1, value2, "beginTime");
            return (Criteria) this;
        }

        public Criteria andBeginTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("begin_time not between", value1, value2, "beginTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeIsNull() {
            addCriterion("end_time is null");
            return (Criteria) this;
        }

        public Criteria andEndTimeIsNotNull() {
            addCriterion("end_time is not null");
            return (Criteria) this;
        }

        public Criteria andEndTimeEqualTo(Date value) {
            addCriterionForJDBCTime("end_time =", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotEqualTo(Date value) {
            addCriterionForJDBCTime("end_time <>", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeGreaterThan(Date value) {
            addCriterionForJDBCTime("end_time >", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("end_time >=", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeLessThan(Date value) {
            addCriterionForJDBCTime("end_time <", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("end_time <=", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeIn(List<Date> values) {
            addCriterionForJDBCTime("end_time in", values, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotIn(List<Date> values) {
            addCriterionForJDBCTime("end_time not in", values, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("end_time between", value1, value2, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("end_time not between", value1, value2, "endTime");
            return (Criteria) this;
        }

        public Criteria andChargeRankIsNull() {
            addCriterion("charge_rank is null");
            return (Criteria) this;
        }

        public Criteria andChargeRankIsNotNull() {
            addCriterion("charge_rank is not null");
            return (Criteria) this;
        }

        public Criteria andChargeRankEqualTo(Integer value) {
            addCriterion("charge_rank =", value, "chargeRank");
            return (Criteria) this;
        }

        public Criteria andChargeRankNotEqualTo(Integer value) {
            addCriterion("charge_rank <>", value, "chargeRank");
            return (Criteria) this;
        }

        public Criteria andChargeRankGreaterThan(Integer value) {
            addCriterion("charge_rank >", value, "chargeRank");
            return (Criteria) this;
        }

        public Criteria andChargeRankGreaterThanOrEqualTo(Integer value) {
            addCriterion("charge_rank >=", value, "chargeRank");
            return (Criteria) this;
        }

        public Criteria andChargeRankLessThan(Integer value) {
            addCriterion("charge_rank <", value, "chargeRank");
            return (Criteria) this;
        }

        public Criteria andChargeRankLessThanOrEqualTo(Integer value) {
            addCriterion("charge_rank <=", value, "chargeRank");
            return (Criteria) this;
        }

        public Criteria andChargeRankIn(List<Integer> values) {
            addCriterion("charge_rank in", values, "chargeRank");
            return (Criteria) this;
        }

        public Criteria andChargeRankNotIn(List<Integer> values) {
            addCriterion("charge_rank not in", values, "chargeRank");
            return (Criteria) this;
        }

        public Criteria andChargeRankBetween(Integer value1, Integer value2) {
            addCriterion("charge_rank between", value1, value2, "chargeRank");
            return (Criteria) this;
        }

        public Criteria andChargeRankNotBetween(Integer value1, Integer value2) {
            addCriterion("charge_rank not between", value1, value2, "chargeRank");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andParkIdIsNull() {
            addCriterion("park_id is null");
            return (Criteria) this;
        }

        public Criteria andParkIdIsNotNull() {
            addCriterion("park_id is not null");
            return (Criteria) this;
        }

        public Criteria andParkIdEqualTo(Integer value) {
            addCriterion("park_id =", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdNotEqualTo(Integer value) {
            addCriterion("park_id <>", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdGreaterThan(Integer value) {
            addCriterion("park_id >", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("park_id >=", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdLessThan(Integer value) {
            addCriterion("park_id <", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdLessThanOrEqualTo(Integer value) {
            addCriterion("park_id <=", value, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdIn(List<Integer> values) {
            addCriterion("park_id in", values, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdNotIn(List<Integer> values) {
            addCriterion("park_id not in", values, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdBetween(Integer value1, Integer value2) {
            addCriterion("park_id between", value1, value2, "parkId");
            return (Criteria) this;
        }

        public Criteria andParkIdNotBetween(Integer value1, Integer value2) {
            addCriterion("park_id not between", value1, value2, "parkId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table local_charge_rules
     *
     * @mbggenerated do_not_delete_during_merge Fri Oct 16 14:27:17 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table local_charge_rules
     *
     * @mbggenerated Fri Oct 16 14:27:17 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}