package com.chinadovey.parking.webapps.pojo.local;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TBChargeRulesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TBChargeRules
     *
     * @mbggenerated Thu Oct 15 13:10:28 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TBChargeRules
     *
     * @mbggenerated Thu Oct 15 13:10:28 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TBChargeRules
     *
     * @mbggenerated Thu Oct 15 13:10:28 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBChargeRules
     *
     * @mbggenerated Thu Oct 15 13:10:28 CST 2015
     */
    public TBChargeRulesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBChargeRules
     *
     * @mbggenerated Thu Oct 15 13:10:28 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBChargeRules
     *
     * @mbggenerated Thu Oct 15 13:10:28 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBChargeRules
     *
     * @mbggenerated Thu Oct 15 13:10:28 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBChargeRules
     *
     * @mbggenerated Thu Oct 15 13:10:28 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBChargeRules
     *
     * @mbggenerated Thu Oct 15 13:10:28 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBChargeRules
     *
     * @mbggenerated Thu Oct 15 13:10:28 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBChargeRules
     *
     * @mbggenerated Thu Oct 15 13:10:28 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBChargeRules
     *
     * @mbggenerated Thu Oct 15 13:10:28 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBChargeRules
     *
     * @mbggenerated Thu Oct 15 13:10:28 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBChargeRules
     *
     * @mbggenerated Thu Oct 15 13:10:28 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TBChargeRules
     *
     * @mbggenerated Thu Oct 15 13:10:28 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPkidIsNull() {
            addCriterion("PKID is null");
            return (Criteria) this;
        }

        public Criteria andPkidIsNotNull() {
            addCriterion("PKID is not null");
            return (Criteria) this;
        }

        public Criteria andPkidEqualTo(Long value) {
            addCriterion("PKID =", value, "pkid");
            return (Criteria) this;
        }

        public Criteria andPkidNotEqualTo(Long value) {
            addCriterion("PKID <>", value, "pkid");
            return (Criteria) this;
        }

        public Criteria andPkidGreaterThan(Long value) {
            addCriterion("PKID >", value, "pkid");
            return (Criteria) this;
        }

        public Criteria andPkidGreaterThanOrEqualTo(Long value) {
            addCriterion("PKID >=", value, "pkid");
            return (Criteria) this;
        }

        public Criteria andPkidLessThan(Long value) {
            addCriterion("PKID <", value, "pkid");
            return (Criteria) this;
        }

        public Criteria andPkidLessThanOrEqualTo(Long value) {
            addCriterion("PKID <=", value, "pkid");
            return (Criteria) this;
        }

        public Criteria andPkidIn(List<Long> values) {
            addCriterion("PKID in", values, "pkid");
            return (Criteria) this;
        }

        public Criteria andPkidNotIn(List<Long> values) {
            addCriterion("PKID not in", values, "pkid");
            return (Criteria) this;
        }

        public Criteria andPkidBetween(Long value1, Long value2) {
            addCriterion("PKID between", value1, value2, "pkid");
            return (Criteria) this;
        }

        public Criteria andPkidNotBetween(Long value1, Long value2) {
            addCriterion("PKID not between", value1, value2, "pkid");
            return (Criteria) this;
        }

        public Criteria andChargerulesnoIsNull() {
            addCriterion("ChargeRulesNO is null");
            return (Criteria) this;
        }

        public Criteria andChargerulesnoIsNotNull() {
            addCriterion("ChargeRulesNO is not null");
            return (Criteria) this;
        }

        public Criteria andChargerulesnoEqualTo(String value) {
            addCriterion("ChargeRulesNO =", value, "chargerulesno");
            return (Criteria) this;
        }

        public Criteria andChargerulesnoNotEqualTo(String value) {
            addCriterion("ChargeRulesNO <>", value, "chargerulesno");
            return (Criteria) this;
        }

        public Criteria andChargerulesnoGreaterThan(String value) {
            addCriterion("ChargeRulesNO >", value, "chargerulesno");
            return (Criteria) this;
        }

        public Criteria andChargerulesnoGreaterThanOrEqualTo(String value) {
            addCriterion("ChargeRulesNO >=", value, "chargerulesno");
            return (Criteria) this;
        }

        public Criteria andChargerulesnoLessThan(String value) {
            addCriterion("ChargeRulesNO <", value, "chargerulesno");
            return (Criteria) this;
        }

        public Criteria andChargerulesnoLessThanOrEqualTo(String value) {
            addCriterion("ChargeRulesNO <=", value, "chargerulesno");
            return (Criteria) this;
        }

        public Criteria andChargerulesnoIn(List<String> values) {
            addCriterion("ChargeRulesNO in", values, "chargerulesno");
            return (Criteria) this;
        }

        public Criteria andChargerulesnoNotIn(List<String> values) {
            addCriterion("ChargeRulesNO not in", values, "chargerulesno");
            return (Criteria) this;
        }

        public Criteria andChargerulesnoBetween(String value1, String value2) {
            addCriterion("ChargeRulesNO between", value1, value2, "chargerulesno");
            return (Criteria) this;
        }

        public Criteria andChargerulesnoNotBetween(String value1, String value2) {
            addCriterion("ChargeRulesNO not between", value1, value2, "chargerulesno");
            return (Criteria) this;
        }

        public Criteria andBeginminuteIsNull() {
            addCriterion("BeginMinute is null");
            return (Criteria) this;
        }

        public Criteria andBeginminuteIsNotNull() {
            addCriterion("BeginMinute is not null");
            return (Criteria) this;
        }

        public Criteria andBeginminuteEqualTo(Integer value) {
            addCriterion("BeginMinute =", value, "beginminute");
            return (Criteria) this;
        }

        public Criteria andBeginminuteNotEqualTo(Integer value) {
            addCriterion("BeginMinute <>", value, "beginminute");
            return (Criteria) this;
        }

        public Criteria andBeginminuteGreaterThan(Integer value) {
            addCriterion("BeginMinute >", value, "beginminute");
            return (Criteria) this;
        }

        public Criteria andBeginminuteGreaterThanOrEqualTo(Integer value) {
            addCriterion("BeginMinute >=", value, "beginminute");
            return (Criteria) this;
        }

        public Criteria andBeginminuteLessThan(Integer value) {
            addCriterion("BeginMinute <", value, "beginminute");
            return (Criteria) this;
        }

        public Criteria andBeginminuteLessThanOrEqualTo(Integer value) {
            addCriterion("BeginMinute <=", value, "beginminute");
            return (Criteria) this;
        }

        public Criteria andBeginminuteIn(List<Integer> values) {
            addCriterion("BeginMinute in", values, "beginminute");
            return (Criteria) this;
        }

        public Criteria andBeginminuteNotIn(List<Integer> values) {
            addCriterion("BeginMinute not in", values, "beginminute");
            return (Criteria) this;
        }

        public Criteria andBeginminuteBetween(Integer value1, Integer value2) {
            addCriterion("BeginMinute between", value1, value2, "beginminute");
            return (Criteria) this;
        }

        public Criteria andBeginminuteNotBetween(Integer value1, Integer value2) {
            addCriterion("BeginMinute not between", value1, value2, "beginminute");
            return (Criteria) this;
        }

        public Criteria andEndminuteIsNull() {
            addCriterion("EndMinute is null");
            return (Criteria) this;
        }

        public Criteria andEndminuteIsNotNull() {
            addCriterion("EndMinute is not null");
            return (Criteria) this;
        }

        public Criteria andEndminuteEqualTo(Integer value) {
            addCriterion("EndMinute =", value, "endminute");
            return (Criteria) this;
        }

        public Criteria andEndminuteNotEqualTo(Integer value) {
            addCriterion("EndMinute <>", value, "endminute");
            return (Criteria) this;
        }

        public Criteria andEndminuteGreaterThan(Integer value) {
            addCriterion("EndMinute >", value, "endminute");
            return (Criteria) this;
        }

        public Criteria andEndminuteGreaterThanOrEqualTo(Integer value) {
            addCriterion("EndMinute >=", value, "endminute");
            return (Criteria) this;
        }

        public Criteria andEndminuteLessThan(Integer value) {
            addCriterion("EndMinute <", value, "endminute");
            return (Criteria) this;
        }

        public Criteria andEndminuteLessThanOrEqualTo(Integer value) {
            addCriterion("EndMinute <=", value, "endminute");
            return (Criteria) this;
        }

        public Criteria andEndminuteIn(List<Integer> values) {
            addCriterion("EndMinute in", values, "endminute");
            return (Criteria) this;
        }

        public Criteria andEndminuteNotIn(List<Integer> values) {
            addCriterion("EndMinute not in", values, "endminute");
            return (Criteria) this;
        }

        public Criteria andEndminuteBetween(Integer value1, Integer value2) {
            addCriterion("EndMinute between", value1, value2, "endminute");
            return (Criteria) this;
        }

        public Criteria andEndminuteNotBetween(Integer value1, Integer value2) {
            addCriterion("EndMinute not between", value1, value2, "endminute");
            return (Criteria) this;
        }

        public Criteria andChargepriceIsNull() {
            addCriterion("ChargePrice is null");
            return (Criteria) this;
        }

        public Criteria andChargepriceIsNotNull() {
            addCriterion("ChargePrice is not null");
            return (Criteria) this;
        }

        public Criteria andChargepriceEqualTo(BigDecimal value) {
            addCriterion("ChargePrice =", value, "chargeprice");
            return (Criteria) this;
        }

        public Criteria andChargepriceNotEqualTo(BigDecimal value) {
            addCriterion("ChargePrice <>", value, "chargeprice");
            return (Criteria) this;
        }

        public Criteria andChargepriceGreaterThan(BigDecimal value) {
            addCriterion("ChargePrice >", value, "chargeprice");
            return (Criteria) this;
        }

        public Criteria andChargepriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ChargePrice >=", value, "chargeprice");
            return (Criteria) this;
        }

        public Criteria andChargepriceLessThan(BigDecimal value) {
            addCriterion("ChargePrice <", value, "chargeprice");
            return (Criteria) this;
        }

        public Criteria andChargepriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ChargePrice <=", value, "chargeprice");
            return (Criteria) this;
        }

        public Criteria andChargepriceIn(List<BigDecimal> values) {
            addCriterion("ChargePrice in", values, "chargeprice");
            return (Criteria) this;
        }

        public Criteria andChargepriceNotIn(List<BigDecimal> values) {
            addCriterion("ChargePrice not in", values, "chargeprice");
            return (Criteria) this;
        }

        public Criteria andChargepriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ChargePrice between", value1, value2, "chargeprice");
            return (Criteria) this;
        }

        public Criteria andChargepriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ChargePrice not between", value1, value2, "chargeprice");
            return (Criteria) this;
        }

        public Criteria andTimespanIsNull() {
            addCriterion("TimeSpan is null");
            return (Criteria) this;
        }

        public Criteria andTimespanIsNotNull() {
            addCriterion("TimeSpan is not null");
            return (Criteria) this;
        }

        public Criteria andTimespanEqualTo(Integer value) {
            addCriterion("TimeSpan =", value, "timespan");
            return (Criteria) this;
        }

        public Criteria andTimespanNotEqualTo(Integer value) {
            addCriterion("TimeSpan <>", value, "timespan");
            return (Criteria) this;
        }

        public Criteria andTimespanGreaterThan(Integer value) {
            addCriterion("TimeSpan >", value, "timespan");
            return (Criteria) this;
        }

        public Criteria andTimespanGreaterThanOrEqualTo(Integer value) {
            addCriterion("TimeSpan >=", value, "timespan");
            return (Criteria) this;
        }

        public Criteria andTimespanLessThan(Integer value) {
            addCriterion("TimeSpan <", value, "timespan");
            return (Criteria) this;
        }

        public Criteria andTimespanLessThanOrEqualTo(Integer value) {
            addCriterion("TimeSpan <=", value, "timespan");
            return (Criteria) this;
        }

        public Criteria andTimespanIn(List<Integer> values) {
            addCriterion("TimeSpan in", values, "timespan");
            return (Criteria) this;
        }

        public Criteria andTimespanNotIn(List<Integer> values) {
            addCriterion("TimeSpan not in", values, "timespan");
            return (Criteria) this;
        }

        public Criteria andTimespanBetween(Integer value1, Integer value2) {
            addCriterion("TimeSpan between", value1, value2, "timespan");
            return (Criteria) this;
        }

        public Criteria andTimespanNotBetween(Integer value1, Integer value2) {
            addCriterion("TimeSpan not between", value1, value2, "timespan");
            return (Criteria) this;
        }

        public Criteria andRulestypeIsNull() {
            addCriterion("RulesType is null");
            return (Criteria) this;
        }

        public Criteria andRulestypeIsNotNull() {
            addCriterion("RulesType is not null");
            return (Criteria) this;
        }

        public Criteria andRulestypeEqualTo(Integer value) {
            addCriterion("RulesType =", value, "rulestype");
            return (Criteria) this;
        }

        public Criteria andRulestypeNotEqualTo(Integer value) {
            addCriterion("RulesType <>", value, "rulestype");
            return (Criteria) this;
        }

        public Criteria andRulestypeGreaterThan(Integer value) {
            addCriterion("RulesType >", value, "rulestype");
            return (Criteria) this;
        }

        public Criteria andRulestypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("RulesType >=", value, "rulestype");
            return (Criteria) this;
        }

        public Criteria andRulestypeLessThan(Integer value) {
            addCriterion("RulesType <", value, "rulestype");
            return (Criteria) this;
        }

        public Criteria andRulestypeLessThanOrEqualTo(Integer value) {
            addCriterion("RulesType <=", value, "rulestype");
            return (Criteria) this;
        }

        public Criteria andRulestypeIn(List<Integer> values) {
            addCriterion("RulesType in", values, "rulestype");
            return (Criteria) this;
        }

        public Criteria andRulestypeNotIn(List<Integer> values) {
            addCriterion("RulesType not in", values, "rulestype");
            return (Criteria) this;
        }

        public Criteria andRulestypeBetween(Integer value1, Integer value2) {
            addCriterion("RulesType between", value1, value2, "rulestype");
            return (Criteria) this;
        }

        public Criteria andRulestypeNotBetween(Integer value1, Integer value2) {
            addCriterion("RulesType not between", value1, value2, "rulestype");
            return (Criteria) this;
        }

        public Criteria andBegintimeIsNull() {
            addCriterion("BeginTime is null");
            return (Criteria) this;
        }

        public Criteria andBegintimeIsNotNull() {
            addCriterion("BeginTime is not null");
            return (Criteria) this;
        }

        public Criteria andBegintimeEqualTo(Date value) {
            addCriterion("BeginTime =", value, "begintime");
            return (Criteria) this;
        }

        public Criteria andBegintimeNotEqualTo(Date value) {
            addCriterion("BeginTime <>", value, "begintime");
            return (Criteria) this;
        }

        public Criteria andBegintimeGreaterThan(Date value) {
            addCriterion("BeginTime >", value, "begintime");
            return (Criteria) this;
        }

        public Criteria andBegintimeGreaterThanOrEqualTo(Date value) {
            addCriterion("BeginTime >=", value, "begintime");
            return (Criteria) this;
        }

        public Criteria andBegintimeLessThan(Date value) {
            addCriterion("BeginTime <", value, "begintime");
            return (Criteria) this;
        }

        public Criteria andBegintimeLessThanOrEqualTo(Date value) {
            addCriterion("BeginTime <=", value, "begintime");
            return (Criteria) this;
        }

        public Criteria andBegintimeIn(List<Date> values) {
            addCriterion("BeginTime in", values, "begintime");
            return (Criteria) this;
        }

        public Criteria andBegintimeNotIn(List<Date> values) {
            addCriterion("BeginTime not in", values, "begintime");
            return (Criteria) this;
        }

        public Criteria andBegintimeBetween(Date value1, Date value2) {
            addCriterion("BeginTime between", value1, value2, "begintime");
            return (Criteria) this;
        }

        public Criteria andBegintimeNotBetween(Date value1, Date value2) {
            addCriterion("BeginTime not between", value1, value2, "begintime");
            return (Criteria) this;
        }

        public Criteria andEndtimeIsNull() {
            addCriterion("EndTime is null");
            return (Criteria) this;
        }

        public Criteria andEndtimeIsNotNull() {
            addCriterion("EndTime is not null");
            return (Criteria) this;
        }

        public Criteria andEndtimeEqualTo(Date value) {
            addCriterion("EndTime =", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeNotEqualTo(Date value) {
            addCriterion("EndTime <>", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeGreaterThan(Date value) {
            addCriterion("EndTime >", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("EndTime >=", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeLessThan(Date value) {
            addCriterion("EndTime <", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeLessThanOrEqualTo(Date value) {
            addCriterion("EndTime <=", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeIn(List<Date> values) {
            addCriterion("EndTime in", values, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeNotIn(List<Date> values) {
            addCriterion("EndTime not in", values, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeBetween(Date value1, Date value2) {
            addCriterion("EndTime between", value1, value2, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeNotBetween(Date value1, Date value2) {
            addCriterion("EndTime not between", value1, value2, "endtime");
            return (Criteria) this;
        }

        public Criteria andChargerankIsNull() {
            addCriterion("ChargeRank is null");
            return (Criteria) this;
        }

        public Criteria andChargerankIsNotNull() {
            addCriterion("ChargeRank is not null");
            return (Criteria) this;
        }

        public Criteria andChargerankEqualTo(Integer value) {
            addCriterion("ChargeRank =", value, "chargerank");
            return (Criteria) this;
        }

        public Criteria andChargerankNotEqualTo(Integer value) {
            addCriterion("ChargeRank <>", value, "chargerank");
            return (Criteria) this;
        }

        public Criteria andChargerankGreaterThan(Integer value) {
            addCriterion("ChargeRank >", value, "chargerank");
            return (Criteria) this;
        }

        public Criteria andChargerankGreaterThanOrEqualTo(Integer value) {
            addCriterion("ChargeRank >=", value, "chargerank");
            return (Criteria) this;
        }

        public Criteria andChargerankLessThan(Integer value) {
            addCriterion("ChargeRank <", value, "chargerank");
            return (Criteria) this;
        }

        public Criteria andChargerankLessThanOrEqualTo(Integer value) {
            addCriterion("ChargeRank <=", value, "chargerank");
            return (Criteria) this;
        }

        public Criteria andChargerankIn(List<Integer> values) {
            addCriterion("ChargeRank in", values, "chargerank");
            return (Criteria) this;
        }

        public Criteria andChargerankNotIn(List<Integer> values) {
            addCriterion("ChargeRank not in", values, "chargerank");
            return (Criteria) this;
        }

        public Criteria andChargerankBetween(Integer value1, Integer value2) {
            addCriterion("ChargeRank between", value1, value2, "chargerank");
            return (Criteria) this;
        }

        public Criteria andChargerankNotBetween(Integer value1, Integer value2) {
            addCriterion("ChargeRank not between", value1, value2, "chargerank");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("Remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("Remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(Object value) {
            addCriterion("Remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(Object value) {
            addCriterion("Remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(Object value) {
            addCriterion("Remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(Object value) {
            addCriterion("Remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(Object value) {
            addCriterion("Remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(Object value) {
            addCriterion("Remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<Object> values) {
            addCriterion("Remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<Object> values) {
            addCriterion("Remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(Object value1, Object value2) {
            addCriterion("Remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(Object value1, Object value2) {
            addCriterion("Remark not between", value1, value2, "remark");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TBChargeRules
     *
     * @mbggenerated do_not_delete_during_merge Thu Oct 15 13:10:28 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TBChargeRules
     *
     * @mbggenerated Thu Oct 15 13:10:28 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}